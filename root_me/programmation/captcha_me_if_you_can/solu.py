#!/usr/bin/env python3
# coding: utf-8

import requests
import shutil
import base64

from google.cloud import vision

test = "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"
with open('resLouis.png', 'wb') as f:
    f.write(base64.b64decode(test))



def detect_text(path):
    """Detects text in the file."""
    from google.cloud import vision
    import io
    client = vision.ImageAnnotatorClient()

    with io.open(path, 'rb') as image_file:
        content = image_file.read()

    image = vision.Image(content=content)

    response = client.text_detection(image=image)
    texts = response.text_annotations
    print('Texts:')

    for text in texts:
        print('\n"{}"'.format(text.description))

        vertices = (['({},{})'.format(vertex.x, vertex.y)
                    for vertex in text.bounding_poly.vertices])

        print('bounds: {}'.format(','.join(vertices)))

    if response.error.message:
        raise Exception(
            '{}\nFor more info on error messages, check: '
            'https://cloud.google.com/apis/design/errors'.format(
                response.error.message))


detect_text("resLouis.png")